name: CI

on: [push, pull_request]

jobs:
  build-and-test:
    env:
      NODE_ENV: ${{ vars.NODE_ENV }}
      DATABASE_URL: ${{ vars.DATABASE_URL }}
      NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
      DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
      GITHUB_CLIENT_ID: ${{ secrets.G_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.G_CLIENT_SECRET }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: Install playwright
        run: pnpm playwright install chromium

      - name: Next.js cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}apps/nextjs/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - name: Build and test
        run: pnpm build && pnpm test

      - name: Create directory for artifacts
        run: |
          mkdir -p ${{ github.workspace }}/artifact

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test results
          path: |
            ${{ github.workspace }}/artifact

  deploy:
    needs: build-and-test
    if: github.repository_owner == 'kleva-j' && ((github.event.pull_request.head.repo.full_name == github.repository) || (github.event_name == 'push'))
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.G_TOKEN }}
          env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }}

      - uses: actions/checkout@v3

      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/main'] }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID}}
          working-directory: ./

      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.G_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
